AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  Tableau AWS Data is a QuickStart that provides an integrated deployment of Tableau
  Server, Redshift cluster, RDS Postgress cluster in the same VPC through Cloudformation
  templates that provision and configure the required resources, including related
  QuickStarts. This awsdata template provisions all of the resources that are specific
  to the awsdata Quick Start.  Leveraged Quick Starts (VPC, bastion, RDGW), if needed,
  can be provisioned by using the awsdata-master template. **WARNING** This template
  creates Amazon EC2 Windows instance and related resources for Tableau Server. It
  also creates an Amazon EC2 Linux instance for SQL script execution, Amazon Redshift
  cluster a high-availability postgres RDS instance and IAM Roles required for EC2
  and Redshift access to data in S3. You will be billed for the AWS resources used
  if you create a stack from this template. (qs-1ndudd5b6)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - VPCID
          - VPCCIDR
          - PrivateSubnet1ID
          - PrivateSubnet2ID
          - PublicSubnet1ID
          - RDSInboundCIDR
          - RedshiftInboundCIDR
          - TableauServerInboundCIDR
          - HostedZoneName
          - BastionEIP
          - RDGWElasticIP
      - Label:
          default: Amazon EC2 Common Configuration
        Parameters:
          - KeyPairName
      - Label:
          default: Amazon Redshift Configuration
        Parameters:
          - RedshiftDatabaseName
          - RedshiftNumberOfNodes
          - RedshiftNodeType
          - RedshiftUsername
          - RedshiftPassword
          - RedshiftDatabasePort
      - Label:
          default: Amazon RDS PostgreSQL Configuration
        Parameters:
          - RDSInstanceIdentifier
          - RDSDatabasePort
          - RDSDatabaseName
          - RDSMultiAZ
          - RDSInstanceClass
          - RDSAllocatedStorage
          - RDSUsername
          - RDSPassword
      - Label:
          default: SQL Worker Configuration
        Parameters:
          - SqlWorkerInstanceType
      - Label:
          default: Tableau Server Configuration
        Parameters:
          - ContentAdminUser
          - ContentAdminPassword
          - RegFirstName
          - RegLastName
          - RegEmail
          - RegCompany
          - RegTitle
          - RegDepartment
          - RegIndustry
          - RegPhone
          - RegCity
          - RegState
          - RegZip
          - RegCountry
          - TableauServerLicenseKey
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - RootStackName
          - QSS3BucketName
          - QSS3BucketRegion
          - QSS3KeyPrefix
          - LoadDataset
          - DatasetS3BucketName
          - DatasetS3KeyPrefix
          - DatasetS3Region
    ParameterLabels:
      BastionEIP:
        default: Bastion Elastic IP
      ContentAdminPassword:
        default: Content Admin Password
      ContentAdminUser:
        default: Content Admin User
      DatasetS3BucketName:
        default: Dataset S3 Bucket Name
      DatasetS3KeyPrefix:
        default: Dataset S3 Key Prefix
      DatasetS3Region:
        default: Dataset S3 Region
      HostedZoneName:
        default: Hosted Zone Name
      KeyPairName:
        default: Key Pair Name
      LoadDataset:
        default: Load dataset
      PrivateSubnet1ID:
        default: Existing VPC Private Subnet 1 ID
      PrivateSubnet2ID:
        default: Existing VPC Private Subnet 2 ID
      PublicSubnet1ID:
        default: Existing VPC Public Subnet1 ID
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
      RDGWElasticIP:
        default: RDGW Elastic IP
      RDSAllocatedStorage:
        default: RDS Allocated Storage
      RDSDatabaseName:
        default: RDS Database Name
      RDSDatabasePort:
        default: RDS Database Port
      RDSInboundCIDR:
        default: RDS Inbound CIDR
      RDSInstanceClass:
        default: RDS Instance Class
      RDSInstanceIdentifier:
        default: RDS Instance Identifier
      RDSMultiAZ:
        default: RDS MultiAZ
      RDSPassword:
        default: RDS Password
      RDSUsername:
        default: RDS Username
      RedshiftDatabaseName:
        default: Redshift Database Name
      RedshiftDatabasePort:
        default: Redshift Database Port
      RedshiftInboundCIDR:
        default: Redshift Inbound CIDR
      RedshiftNodeType:
        default: Redshift Node Type
      RedshiftNumberOfNodes:
        default: Redshift Number of Nodes
      RedshiftPassword:
        default: Redshift Password
      RedshiftUsername:
        default: Redshift Username
      RegCity:
        default: Reg City
      RegCompany:
        default: Reg Company
      RegCountry:
        default: Reg Country
      RegDepartment:
        default: Reg Department
      RegEmail:
        default: Reg Email
      RegFirstName:
        default: Reg First Name
      RegIndustry:
        default: Reg Industry
      RegLastName:
        default: Reg Last Name
      RegPhone:
        default: Reg Phone
      RegState:
        default: Reg State
      RegTitle:
        default: Reg Title
      RegZip:
        default: Reg Zip
      RootStackName:
        default: Stack Name
      SqlWorkerInstanceType:
        default: SQL Worker Instance Type
      TableauServerInboundCIDR:
        default: Tableau Server Inbound CIDR
      TableauServerLicenseKey:
        default: Tableau Server License Key
      VPCCIDR:
        default: Existing VPC CIDR
      VPCID:
        default: Existing VPC ID
Parameters:
  BastionEIP:
    Default: 169.254.169.254
    Description: >-
      Public IP of Bastion for use in creating convenience DNS entries for AWS Resources
      created by the Quick Start.  If you have not specified a name in the Hosted
      Zone Name parameter, this parameter will not be used and can remain set to its
      default.
    Type: String
  ContentAdminPassword:
    Description: The password for the initial Admin user for Tableau server
    MinLength: '1'
    NoEcho: 'true'
    Type: String
  ContentAdminUser:
    Default: admin
    Description: The name of the initial Admin user for Tableau server
    MinLength: '1'
    Type: String
  DatasetS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Dataset bucket name can include numbers, lowercase letters,
      uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: aws-quickstart-datasets
    Description: Dataset bucket name for the Quick Start dataset. Dataset bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  DatasetS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Dataset key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: tableau-awsdata/synthetic-store-sales/v1/
    Description: S3 key prefix for the Quick Start dataset. Dataset key prefix can
      include numbers, lowercase letters, uppercase letters, hyphens (-), and forward
      slash (/).
    Type: String
  DatasetS3Region:
    Default: us-east-1
    Description: The AWS region where the dataset S3 bucket is located and is used
      with the Redshift COPY command.
    Type: String
  HostedZoneName:
    Default: <NONE>
    Description: >-
      Name of Hosted Zone within which the Quick Start will create convenience DNS
      entries for AWS Resources created by the Quick Start.  If you do not wish to
      create convenience DNS entries or are not using AWS Route53 for DNS, enter '<NONE>',
      otherwise enter the Hosted Zone name including the trailing period, for example
      'dev.example.com.'.
    Type: String
  KeyPairName:
    Description: >-
      Name of existing EC2 public/private key pair, which allows you to connect securely
      to instances deployed with the Quick Start after they launch.  When you created
      an AWS account, this is the key pair you created in your preferred region.  Enter
      the name of the keypair.
    Type: AWS::EC2::KeyPair::KeyName
  LoadDataset:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: To load and configure the dataset in Amazon Redshift, Amazon RDS
      PostgresSQL, and Tableau Server using the dataset S3 bucket name and key prefix,
      set this parameter to true.
    Type: String
  PrivateSubnet1ID:
    Description: ID of the private subnet 1 in Availability Zone 1 (e.g., subnet-a0246dcd)
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2ID:
    Description: ID of the private subnet 2 in Availability Zone 2 (e.g., subnet-a0246dcd)
    Type: AWS::EC2::Subnet::Id
  PublicSubnet1ID:
    Description: ID of the public subnet 1 in Availability Zone 1 (e.g., subnet-a0246dcd)
    Type: AWS::EC2::Subnet::Id
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: 'The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.'
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-tableau-awsdata/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  RDGWElasticIP:
    Default: 169.254.169.254
    Description: >-
      Public IP of Remote Desktop Gateway for use in creating convenience DNS entries
      for AWS Resources created by the Quick Start.  If you have not specified a name
      in the Hosted Zone Name parameter, this parameter will not be used and can remain
      set to its default.
    Type: String
  RDSAllocatedStorage:
    ConstraintDescription: must be between 5 and 1024GiB
    Default: '5'
    Description: The size of the database (GiB)
    MaxValue: '1024'
    MinValue: '5'
    Type: Number
  RDSDatabaseName:
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
    Default: quickstart
    Description: The name of the initial database created when the redshift cluster
      is provisioned
    MaxLength: '64'
    MinLength: '1'
    Type: String
  RDSDatabasePort:
    Default: '5432'
    Description: 'The port that the RDS instance will listen on and that will be allowed
      through the Security Group. '
    Type: String
  RDSInboundCIDR:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})|<VPCCIDR>
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
    Default: <VPCCIDR>
    Description: Allow inbound traffic to RDS from this CIDR range.  Set to '<VPCCIDR>'
      to use the CIDR of the created VPC.
    MaxLength: '18'
    MinLength: '9'
    Type: String
  RDSInstanceClass:
    AllowedValues:
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.r3.large
      - db.r3.xlarge
      - db.r3.2xlarge
      - db.r3.4xlarge
      - db.r3.8xlarge
      - db.t2.micro
      - db.t2.small
      - db.t2.medium
      - db.t2.large
    ConstraintDescription: Must be a valid RDS database instance type.
    Default: db.t2.large
    Description: Database instance class for the provisioned RDS instance.
    Type: String
  RDSInstanceIdentifier:
    Default: quickstart-tableau-awsdata
    Description: The identifier to use for the RDS instance
    Type: String
  RDSMultiAZ:
    AllowedValues:
      - 'true'
      - 'false'
    ConstraintDescription: true or false
    Default: 'true'
    Description: When true, launch a multi availability zone RDS instance.
    Type: String
  RDSPassword:
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
    Description: The password associated with the admin account for the provisioned
      postgres RDS instance.
    MaxLength: '41'
    MinLength: '8'
    NoEcho: 'true'
    Type: String
  RDSUsername:
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
    Default: postgres
    Description: The user name associated with the admin account for the provisioned
      postgres RDS instance
    MaxLength: '16'
    MinLength: '1'
    NoEcho: 'false'
    Type: String
  RedshiftDatabaseName:
    AllowedPattern: ([a-z]|[0-9])+
    ConstraintDescription: must contain a-z or 0-9 only.
    Default: quickstart
    Description: The name of the initial database created when the redshift cluster
      is provisioned
    Type: String
  RedshiftDatabasePort:
    Default: '5439'
    Description: 'The port that Redshift will listen on and that will be allowed through
      the Security Group. '
    Type: String
  RedshiftInboundCIDR:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})|<VPCCIDR>
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
    Default: <VPCCIDR>
    Description: Allow inbound traffic to the cluster from this CIDR range.  Set to
      '<VPCCIDR>' to use the CIDR of the created VPC.
    MaxLength: '18'
    MinLength: '9'
    Type: String
  RedshiftNodeType:
    AllowedValues:
      - ds2.xlarge
      - ds2.8xlarge
      - dc1.large
      - dc1.8xlarge
      - dc2.large
      - dc2.8xlarge
      - ra3.4xlarge 
      - ra3.16xlarge
    ConstraintDescription: must be a valid RedShift node type.
    Default: dc1.large
    Description: The node type to be provisioned for the redshift cluster
    Type: String
  RedshiftNumberOfNodes:
    Default: '2'
    Description: The number of compute nodes in the redshift cluster
    Type: Number
  RedshiftPassword:
    AllowedPattern: '[a-zA-Z0-9~`!#$%^&*()-_+={}|;:,.<>\[\]]*'
    ConstraintDescription: >-
      Between 8 and 64 chars in length; must contain at least one uppercase letter,
      one lowercase letter, and one number; can use any printable ASCII character
      (ASCII code 33 to 126) except ' (single quote), " (double quote), \, /, @, or
      space.
    Description: The password associated with the master user account for the redshift
      cluster that is being created.
    MaxLength: '64'
    MinLength: '8'
    NoEcho: 'true'
    Type: String
  RedshiftUsername:
    AllowedPattern: ([a-z])([a-z]|[0-9])*
    ConstraintDescription: must start with a-z and contain only a-z or 0-9.
    Default: redshift
    Description: The user name associated with the master user account for the redshift
      cluster that is being created
    Type: String
  RegCity:
    Description: City
    Type: String
  RegCompany:
    Description: Company
    Type: String
  RegCountry:
    Description: Country
    Type: String
  RegDepartment:
    Description: Department
    Type: String
  RegEmail:
    Description: Email
    MinLength: '1'
    Type: String
  RegFirstName:
    Description: First Name
    MinLength: '1'
    Type: String
  RegIndustry:
    Description: Industry
    Type: String
  RegLastName:
    Description: Last Name
    MinLength: '1'
    Type: String
  RegPhone:
    Description: Phone
    Type: String
  RegState:
    Description: State
    Type: String
  RegTitle:
    Description: Title
    Type: String
  RegZip:
    Description: ZIP/Postal Code
    Type: String
  RootStackName:
    Default: <NONE>
    Description: Name of Top-Level Stack
    Type: String
  SqlWorkerInstanceType:
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
    Default: t2.micro
    Description: Amazon EC2 instance type for the SQL Worker instance
    Type: String
  TableauServerInboundCIDR:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})|<VPCCIDR>
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
    Default: <VPCCIDR>
    Description: CIDR from which you may connect to web interface or bastion host.  Set
      to '<VPCCIDR>' to use the CIDR of the created VPC.
    MaxLength: '18'
    MinLength: '9'
    Type: String
  TableauServerLicenseKey:
    Default: ''
    Description: License Key (leave blank for trial)
    Type: String
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC
    Type: String
  VPCID:
    Description: ID of the VPC (e.g., vpc-0343606e)
    Type: AWS::EC2::VPC::Id
Conditions:
  NoRedshiftInboundCIDRCondition: !Equals
    - !Ref 'RedshiftInboundCIDR'
    - <VPCCIDR>
  NoRDSInboundCIDRCondition: !Equals
    - !Ref 'RDSInboundCIDR'
    - <VPCCIDR>
  NoTableauServerInboundCIDRCondition: !Equals
    - !Ref 'TableauServerInboundCIDR'
    - <VPCCIDR>
  RedshiftSingleNodeClusterCondition: !Equals
    - !Ref 'RedshiftNumberOfNodes'
    - '1'
  HostedZoneIsSpecifiedCondition: !Not
    - !Equals
      - !Ref 'HostedZoneName'
      - <NONE>
  RootStackNameIsSpecifiedCondition: !Not
    - !Equals
      - !Ref 'RootStackName'
      - <NONE>
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']

Resources:
  IAMRolesStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/iam-roles.template
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        DatasetS3BucketName: !Ref 'DatasetS3BucketName'
        DatasetS3KeyPrefix: !Ref 'DatasetS3KeyPrefix'
        QSS3BucketName: !Ref 'QSS3BucketName'
        QSS3KeyPrefix: !Ref 'QSS3KeyPrefix'
  RedshiftClusterStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/redshift-cluster.template
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        VPC: !Ref 'VPCID'
        ClusterSubnetID: !Ref 'PrivateSubnet1ID'
        DatabaseName: !Ref 'RedshiftDatabaseName'
        ClusterType: !If
          - RedshiftSingleNodeClusterCondition
          - single-node
          - multi-node
        NumberOfNodes: !Ref 'RedshiftNumberOfNodes'
        NodeType: !Ref 'RedshiftNodeType'
        MasterUsername: !Ref 'RedshiftUsername'
        MasterUserPassword: !Ref 'RedshiftPassword'
        InboundTraffic: !If
          - NoRedshiftInboundCIDRCondition
          - !Ref 'VPCCIDR'
          - !Ref 'RedshiftInboundCIDR'
        DatabasePort: !Ref 'RedshiftDatabasePort'
  RDSInstanceStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/rds-instance.template
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        VpcId: !Ref 'VPCID'
        Subnets: !Join
          - ','
          - - !Ref 'PrivateSubnet1ID'
            - !Ref 'PrivateSubnet2ID'
        DBIdentifier: !Ref 'RDSInstanceIdentifier'
        DatabasePort: !Ref 'RDSDatabasePort'
        DBName: !Ref 'RDSDatabaseName'
        DBUser: !Ref 'RDSUsername'
        DBPassword: !Ref 'RDSPassword'
        InboundTraffic: !If
          - NoRDSInboundCIDRCondition
          - !Ref 'VPCCIDR'
          - !Ref 'RedshiftInboundCIDR'
        DBAllocatedStorage: !Ref 'RDSAllocatedStorage'
        DBInstanceClass: !Ref 'RDSInstanceClass'
        MultiAZDatabase: !Ref 'RDSMultiAZ'
  SQLWorkerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/sql-worker.template
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        DatasetS3BucketName: !Ref 'DatasetS3BucketName'
        DatasetS3KeyPrefix: !Ref 'DatasetS3KeyPrefix'
        DatasetS3Region: !Ref 'DatasetS3Region'
        IAMRoleEc2Worker: !GetAtt 
          - IAMRolesStack
          - Outputs.IAMRoleEc2Worker
        IAMRoleEc2WorkerArn: !GetAtt 
          - IAMRolesStack
          - Outputs.IAMRoleEc2WorkerArn
        IAMRoleRedshiftWorker: !GetAtt 
          - IAMRolesStack
          - Outputs.IAMRoleRedshiftWorker
        IAMRoleRedshiftWorkerArn: !GetAtt 
          - IAMRolesStack
          - Outputs.IAMRoleRedshiftWorkerArn
        IamInstanceProfile: !GetAtt 
          - IAMRolesStack
          - Outputs.InstanceProfileEc2Worker
        InstanceType: !Ref 'SqlWorkerInstanceType'
        KeyPairName: !Ref 'KeyPairName'
        LoadDataset: !Ref 'LoadDataset'
        QSS3BucketName: !Ref 'QSS3BucketName'
        QSS3BucketRegion: !Ref 'QSS3BucketRegion'
        QSS3KeyPrefix: !Ref 'QSS3KeyPrefix'
        RDSDBName: !GetAtt 
          - RDSInstanceStack
          - Outputs.DBName
        RDSDatabasePort: !GetAtt 
          - RDSInstanceStack
          - Outputs.Port
        RDSHost: !GetAtt 
          - RDSInstanceStack
          - Outputs.DBAddress
        RDSPassword: !GetAtt 
          - RDSInstanceStack
          - Outputs.DBPassword
        RDSUsername: !GetAtt 
          - RDSInstanceStack
          - Outputs.DBUser
        RedshiftClusterId: !GetAtt 
          - RedshiftClusterStack
          - Outputs.RedshiftClusterId
        RedshiftDBName: !GetAtt 
          - RedshiftClusterStack
          - Outputs.RedshiftDatabaseName
        RedshiftDatabasePort: !GetAtt 
          - RedshiftClusterStack
          - Outputs.RedshiftPort
        RedshiftHost: !GetAtt 
          - RedshiftClusterStack
          - Outputs.RedshiftHost
        RedshiftPassword: !GetAtt 
          - RedshiftClusterStack
          - Outputs.RedshiftPassword
        RedshiftUsername: !GetAtt 
          - RedshiftClusterStack
          - Outputs.RedshiftUsername
        SSHLocation: !Ref 'VPCCIDR'
        SubnetId: !Ref 'PrivateSubnet1ID'
        VpcId: !Ref 'VPCID'
  TableauServerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/tableau-server-single-server.template
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        ContentAdminPassword: !Ref 'ContentAdminPassword'
        ContentAdminUser: !Ref 'ContentAdminUser'
        DatasetS3BucketName: !Ref 'DatasetS3BucketName'
        DatasetS3KeyPrefix: !Ref 'DatasetS3KeyPrefix'
        IAMRoleEc2Worker: !GetAtt 
          - IAMRolesStack
          - Outputs.IAMRoleEc2Worker
        IamInstanceProfile: !GetAtt 
          - IAMRolesStack
          - Outputs.InstanceProfileEc2Worker
        KeyPairName: !Ref 'KeyPairName'
        LoadDataset: !Ref 'LoadDataset'
        QSS3BucketName: !Ref 'QSS3BucketName'
        QSS3BucketRegion: !Ref 'QSS3BucketRegion'
        QSS3KeyPrefix: !Ref 'QSS3KeyPrefix'
        RDSDatabaseName: !Ref 'RDSDatabaseName'
        RDSDatabasePort: !GetAtt 
          - RDSInstanceStack
          - Outputs.DBPort
        RDSHost: !GetAtt 
          - RDSInstanceStack
          - Outputs.DBAddress
        RDSPassword: !Ref 'RDSPassword'
        RDSUsername: !Ref 'RDSUsername'
        RedshiftDatabaseName: !Ref 'RedshiftDatabaseName'
        RedshiftDatabasePort: !GetAtt 
          - RedshiftClusterStack
          - Outputs.RedshiftPort
        RedshiftHost: !GetAtt 
          - RedshiftClusterStack
          - Outputs.RedshiftHost
        RedshiftPassword: !Ref 'RedshiftPassword'
        RedshiftUsername: !Ref 'RedshiftUsername'
        RegCity: !Ref 'RegCity'
        RegCompany: !Ref 'RegCompany'
        RegCountry: !Ref 'RegCountry'
        RegDepartment: !Ref 'RegDepartment'
        RegEmail: !Ref 'RegEmail'
        RegFirstName: !Ref 'RegFirstName'
        RegIndustry: !Ref 'RegIndustry'
        RegLastName: !Ref 'RegLastName'
        RegPhone: !Ref 'RegPhone'
        RegState: !Ref 'RegState'
        RegTitle: !Ref 'RegTitle'
        RegZip: !Ref 'RegZip'
        SourceCidr: !If
          - NoTableauServerInboundCIDRCondition
          - !Ref 'VPCCIDR'
          - !Ref 'TableauServerInboundCIDR'
        SubnetID: !Ref 'PublicSubnet1ID'
        TableauServerLicenseKey: !Ref 'TableauServerLicenseKey'
        VpcId: !Ref 'VPCID'
  DnsRecordSetStack:
    Type: AWS::CloudFormation::Stack
    Condition: HostedZoneIsSpecifiedCondition
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/iam-roles.template
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        RootStackName: !If
          - RootStackNameIsSpecifiedCondition
          - !Ref 'RootStackName'
          - !Ref 'AWS::StackName'
        HostedZoneName: !Ref 'HostedZoneName'
        BastionEIP: !Ref 'BastionEIP'
        RDGWElasticIP: !Ref 'RDGWElasticIP'
        TableauServerPublicName:
          Description: Convenient Name for TableauServer Public Access
          Value: !If
            - HostedZoneIsSpecifiedCondition
            - !GetAtt 'DnsRecordSetStack.Outputs.TableauServerPublicName'
            - !GetAtt 'TableauServerStack.Outputs.PublicDnsName'
        TableauServerPrivateName:
          Description: Convenient Name for TableauServer Private Access
          Value: !If
            - HostedZoneIsSpecifiedCondition
            - !GetAtt 'DnsRecordSetStack.Outputs.TableauServerPrivateName'
            - !GetAtt 'TableauServerStack.Outputs.PrivateDnsName'
        SqlWorkerPrivateName:
          Description: Convenient Name for SQL Worker Private Access
          Value: !If
            - HostedZoneIsSpecifiedCondition
            - !GetAtt 'DnsRecordSetStack.Outputs.SqlWorkerPrivateName'
            - !GetAtt 'SQLWorkerStack.Outputs.PrivateDnsName'
        RedshiftPrivateName:
          Description: Convenient Name for Redshift Private Access
          Value: !If
            - HostedZoneIsSpecifiedCondition
            - !GetAtt 'DnsRecordSetStack.Outputs.RedshiftPrivateName'
            - !GetAtt 'RedshiftClusterStack.Outputs.RedshiftHost'
        RDSPrivateName:
          Description: Convenient Name for Postgres RDS Private Access
          Value: !If
            - HostedZoneIsSpecifiedCondition
            - !GetAtt 'DnsRecordSetStack.Outputs.RDSPrivateName'
            - !GetAtt 'RDSInstanceStack.Outputs.DBAddress'
Outputs:
  TableauServerURL:
    Description: URL through which Tableau Server can be accessed.
    Value: !Join
      - ''
      - - http://
        - !If
          - HostedZoneIsSpecifiedCondition
          - !GetAtt 'DnsRecordSetStack.Outputs.TableauServerPublicName'
          - !GetAtt 'TableauServerStack.Outputs.PublicDnsName'
        - ':'
        - !GetAtt 'TableauServerStack.Outputs.PublicGatewayPort'
        - /
  BastionPublicName:
    Description: Convenient Name for Bastion Public Access
    Value: !If
      - HostedZoneIsSpecifiedCondition
      - !GetAtt 'DnsRecordSetStack.Outputs.BastionPublicName'
      - !Ref 'BastionEIP'
  RDGWPublicName:
    Description: Convenient Name for RDGW Public Access
    Value: !If
      - HostedZoneIsSpecifiedCondition
      - !GetAtt 'DnsRecordSetStack.Outputs.RDGWPublicName'
      - !Ref 'RDGWElasticIP'
  TableauServerPublicName:
    Description: Convenient Name for TableauServer Public Access
    Value: !If
      - HostedZoneIsSpecifiedCondition
      - !GetAtt 'DnsRecordSetStack.Outputs.TableauServerPublicName'
      - !GetAtt 'TableauServerStack.Outputs.PublicDnsName'
  TableauServerPrivateName:
    Description: Convenient Name for TableauServer Private Access
    Value: !If
      - HostedZoneIsSpecifiedCondition
      - !GetAtt 'DnsRecordSetStack.Outputs.TableauServerPrivateName'
      - !GetAtt 'TableauServerStack.Outputs.PrivateDnsName'
  SqlWorkerPrivateName:
    Description: Convenient Name for SQL Worker Private Access
    Value: !If
      - HostedZoneIsSpecifiedCondition
      - !GetAtt 'DnsRecordSetStack.Outputs.SqlWorkerPrivateName'
      - !GetAtt 'SQLWorkerStack.Outputs.PrivateDnsName'
  RedshiftPrivateName:
    Description: Convenient Name for Redshift Private Access
    Value: !If
      - HostedZoneIsSpecifiedCondition
      - !GetAtt 'DnsRecordSetStack.Outputs.RedshiftPrivateName'
      - !GetAtt 'RedshiftClusterStack.Outputs.RedshiftHost'
  RDSPrivateName:
    Description: Convenient Name for Postgres RDS Private Access
    Value: !If
      - HostedZoneIsSpecifiedCondition
      - !GetAtt 'DnsRecordSetStack.Outputs.RDSPrivateName'
      - !GetAtt 'RDSInstanceStack.Outputs.DBAddress'
