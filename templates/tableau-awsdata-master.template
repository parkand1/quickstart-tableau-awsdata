AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  Tableau AWS Data is a QuickStart that provides an integrated deployment of Tableau
  Server, Redshift cluster, RDS Postgress cluster in the same VPC through Cloudformation
  templates that provision and configure the required resources, including related
  QuickStarts. This master template provisions a new VPC, Linux Bastions, and Remote
  Desktop Gateways by leveraging existing Quick Starts.  Within the new VPC, it creates
  an Amazon EC2 Windows instance and related resources for Tableau Server. It also
  creates an Amazon EC2 Linux instance for SQL script execution, Amazon Redshift cluster
  a high-availability postgres RDS instance and IAM Roles required for EC2 and Redshift
  access to data in S3. You will be billed for the AWS resources used if you create
  a stack from this template. (qs-1ndudd5b1)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - AvailabilityZones
          - VPCDefinition
          - RDSInboundCIDR
          - RedshiftInboundCIDR
          - TableauServerInboundCIDR
          - BastionInboundCIDR
          - RDGWInboundCIDR
          - HostedZoneName
      - Label:
          default: Amazon EC2 Common Configuration
        Parameters:
          - KeyPairName
      - Label:
          default: Linux Bastion Configuration
        Parameters:
          - BastionInstanceType
          - BastionAMIOS
          - EnableBanner
          - BastionBanner
      - Label:
          default: Remote Desktop Gateway Configuration
        Parameters:
          - RDGWInstanceType
          - RDGWAdminUser
          - RDGWAdminPassword
          - DomainDNSName
      - Label:
          default: Amazon Redshift Configuration
        Parameters:
          - RedshiftDatabaseName
          - RedshiftNumberOfNodes
          - RedshiftNodeType
          - RedshiftUsername
          - RedshiftPassword
          - RedshiftDatabasePort
      - Label:
          default: Amazon RDS PostgreSQL Configuration
        Parameters:
          - RDSInstanceIdentifier
          - RDSDatabasePort
          - RDSDatabaseName
          - RDSMultiAZ
          - RDSInstanceClass
          - RDSAllocatedStorage
          - RDSUsername
          - RDSPassword
      - Label:
          default: SQL Worker Configuration
        Parameters:
          - SqlWorkerInstanceType
      - Label:
          default: Tableau Server Configuration
        Parameters:
          - ContentAdminUser
          - ContentAdminPassword
          - RegFirstName
          - RegLastName
          - RegEmail
          - RegCompany
          - RegTitle
          - RegDepartment
          - RegIndustry
          - RegPhone
          - RegCity
          - RegState
          - RegZip
          - RegCountry
          - TableauServerLicenseKey
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - QSS3BucketName
          - QSS3BucketRegion
          - QSS3KeyPrefix
          - LoadDataset
          - DatasetS3BucketName
          - DatasetS3KeyPrefix
          - DatasetS3Region
    ParameterLabels:
      AvailabilityZones:
        default: Availability Zones
      BastionAMIOS:
        default: Bastion AMI Operating System
      BastionBanner:
        default: Bastion Banner
      BastionInboundCIDR:
        default: Bastion Inbound CIDR
      BastionInstanceType:
        default: Bastion Instance Type
      ContentAdminPassword:
        default: Content Admin Password
      ContentAdminUser:
        default: Content Admin User
      DatasetS3BucketName:
        default: Dataset S3 Bucket Name
      DatasetS3KeyPrefix:
        default: Dataset S3 Key Prefix
      DatasetS3Region:
        default: Dataset S3 Region
      DomainDNSName:
        default: Domain DNS Name
      EnableBanner:
        default: Enable bastion banner
      HostedZoneName:
        default: Hosted Zone Name
      KeyPairName:
        default: Key pair name
      LoadDataset:
        default: Load dataset
      QSS3BucketName:
        default: Quick Start S3 Bucket Namei
      QSS3BucketRegion:
        default: Quick Start S3 bucket region 
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
      RDGWAdminPassword:
        default: Remote Desktop Gateway Admin Password
      RDGWAdminUser:
        default: Remote Desktop Gateway Admin User Name
      RDGWInboundCIDR:
        default: Remote Desktop Gateway Inbound CIDR
      RDGWInstanceType:
        default: Remote Desktop Gateway Instance Type
      RDSAllocatedStorage:
        default: RDS Allocated Storage
      RDSDatabaseName:
        default: RDS Database Name
      RDSDatabasePort:
        default: RDS Database Port
      RDSInboundCIDR:
        default: RDS Inbound CIDR
      RDSInstanceClass:
        default: RDS Instance Class
      RDSInstanceIdentifier:
        default: RDS Instance Identifier
      RDSMultiAZ:
        default: RDS MultiAZ
      RDSPassword:
        default: RDS Password
      RDSUsername:
        default: RDS Username
      RedshiftDatabaseName:
        default: Redshift Database Name
      RedshiftDatabasePort:
        default: Redshift Database Port
      RedshiftInboundCIDR:
        default: Redshift Inbound CIDR
      RedshiftNodeType:
        default: Redshift Node Type
      RedshiftNumberOfNodes:
        default: Redshift Number of Nodes
      RedshiftPassword:
        default: Redshift Password
      RedshiftUsername:
        default: Redshift Username
      RegCity:
        default: Reg City
      RegCompany:
        default: Reg Company
      RegCountry:
        default: Reg Country
      RegDepartment:
        default: Reg Department
      RegEmail:
        default: Reg Email
      RegFirstName:
        default: Reg First Name
      RegIndustry:
        default: Reg Industry
      RegLastName:
        default: Reg Last Name
      RegPhone:
        default: Reg Phone
      RegState:
        default: Reg State
      RegTitle:
        default: Reg Title
      RegZip:
        default: Reg Zip
      SqlWorkerInstanceType:
        default: SQL Worker Instance Type
      TableauServerInboundCIDR:
        default: Tableau Server Inbound CIDR
      TableauServerLicenseKey:
        default: Tableau Server License Key
      VPCDefinition:
        default: VPC Definition
Parameters:
  AvailabilityZones:
    Description: 'List of Availability Zones to use for the subnets in the VPC. Note:
      The logical order is preserved.'
    Type: List<AWS::EC2::AvailabilityZone::Name>
  BastionAMIOS:
    AllowedValues:
      - Amazon-Linux-HVM
      - CentOS-7-HVM
      - UbuntuServer-1404-LTS-HVM
      - UbuntuServer-1604-LTS-HVM
    Default: Amazon-Linux-HVM
    Description: The Linux distribution for the AMI to be used for the bastion instances
    Type: String
  BastionBanner:
    Default: https://aws-quickstart.s3.amazonaws.com/quickstart-tableau-awsdata/submodules/quickstart-linux-bastion/scripts/banner_message.txt
    Description: Banner text to display upon login
    Type: String
  BastionInboundCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: Allowed CIDR block for external SSH access to the bastions
    Type: String
  BastionInstanceType:
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
    Default: t2.micro
    Description: Amazon EC2 instance type for the bastion instances
    Type: String
  ContentAdminPassword:
    Description: The password for the initial Admin user for Tableau server
    MinLength: '1'
    NoEcho: 'true'
    Type: String
  ContentAdminUser:
    Default: admin
    Description: The name of the initial Admin user for Tableau server
    MinLength: '1'
    Type: String
  DatasetS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Dataset bucket name can include numbers, lowercase letters,
      uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: aws-quickstart-datasets
    Description: Dataset bucket name for the Quick Start dataset. Dataset bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  DatasetS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Dataset key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: tableau-awsdata/synthetic-store-sales/v1/
    Description: S3 key prefix for the Quick Start dataset. Dataset key prefix can
      include numbers, lowercase letters, uppercase letters, hyphens (-), and forward
      slash (/).
    Type: String
  DatasetS3Region:
    Default: us-east-1
    Description: The AWS region where the dataset S3 bucket is located and is used
      with the Redshift COPY command.
    Type: String
  DomainDNSName:
    AllowedPattern: '[a-zA-Z0-9]+\..+'
    Default: example.com
    Description: Fully qualified domain name (FQDN) e.g. example.com
    MaxLength: '25'
    MinLength: '3'
    Type: String
  EnableBanner:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
    Description: To include a banner to be displayed when connecting via SSH to the
      bastion, choose true.
    Type: String
  HostedZoneName:
    Default: <NONE>
    Description: >-
      Name of Hosted Zone within which the Quick Start will create convenience DNS
      entries for AWS Resources created by the Quick Start.  If you do not wish to
      create convenience DNS entries or are not using AWS Route53 for DNS, enter '<NONE>',
      otherwise enter the Hosted Zone name including the trailing period, for example
      'dev.example.com.'.
    Type: String
  KeyPairName:
    Description: Amazon EC2 Key Pair
    Type: AWS::EC2::KeyPair::KeyName
  LoadDataset:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: To load and configure the dataset in Amazon Redshift, Amazon RDS
      PostgresSQL, and Tableau Server using the dataset S3 bucket name and key prefix,
      set this parameter to true.
    Type: String
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: 'The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.'
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-tableau-awsdata/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  RDGWAdminPassword:
    AllowedPattern: (?=^.{6,255}$)(?=^[^&]+$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    Description: Password for the administrative account. Must be at least 8 characters
      containing letters, numbers and symbols (without ampersand)
    MaxLength: '32'
    MinLength: '8'
    NoEcho: 'true'
    Type: String
  RDGWAdminUser:
    AllowedPattern: '[a-zA-Z0-9]*'
    Default: admin
    Description: User name for the new local administrator account
    MaxLength: '25'
    MinLength: '5'
    Type: String
  RDGWInboundCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$|<VPCCIDR>
    Description: Allowed CIDR Block for external access to the Remote Desktop Gateways.
      Set to '<VPCCIDR>' to use the CIDR of the created VPC.
    Type: String
  RDGWInstanceType:
    AllowedValues:
      - t2.large
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
    Default: t2.large
    Description: Amazon EC2 instance type for the Remote Desktop Gateway instances
    Type: String
  RDSAllocatedStorage:
    ConstraintDescription: must be between 5 and 1024GiB
    Default: '5'
    Description: The size of the database (GiB)
    MaxValue: '1024'
    MinValue: '5'
    Type: Number
  RDSDatabaseName:
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
    Default: quickstart
    Description: The name of the initial database created when the redshift cluster
      is provisioned
    MaxLength: '64'
    MinLength: '1'
    Type: String
  RDSDatabasePort:
    Default: '5432'
    Description: 'The port that the RDS instance will listen on and that will be allowed
      through the Security Group. '
    Type: String
  RDSInboundCIDR:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})|<VPCCIDR>
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
    Default: <VPCCIDR>
    Description: Allow inbound traffic to RDS from this CIDR range.  Set to '<VPCCIDR>'
      to use the CIDR of the created VPC.
    MaxLength: '18'
    MinLength: '9'
    Type: String
  RDSInstanceClass:
    AllowedValues:
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.r3.large
      - db.r3.xlarge
      - db.r3.2xlarge
      - db.r3.4xlarge
      - db.r3.8xlarge
      - db.t2.micro
      - db.t2.small
      - db.t2.medium
      - db.t2.large
    ConstraintDescription: Must be a valid RDS database instance type.
    Default: db.t2.large
    Description: Database instance class for the provisioned RDS instance.
    Type: String
  RDSInstanceIdentifier:
    Default: quickstart-tableau-awsdata
    Description: The identifier to use for the RDS instance
    Type: String
  RDSMultiAZ:
    AllowedValues:
      - 'true'
      - 'false'
    ConstraintDescription: true or false
    Default: 'true'
    Description: When true, launch a multi availability zone RDS instance.
    Type: String
  RDSPassword:
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
    Description: The password associated with the admin account for the provisioned
      postgres RDS instance.
    MaxLength: '41'
    MinLength: '8'
    NoEcho: 'true'
    Type: String
  RDSUsername:
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
    Default: postgres
    Description: The user name associated with the admin account for the provisioned
      postgres RDS instance
    MaxLength: '16'
    MinLength: '1'
    NoEcho: 'false'
    Type: String
  RedshiftDatabaseName:
    AllowedPattern: ([a-z]|[0-9])+
    ConstraintDescription: must contain a-z or 0-9 only.
    Default: quickstart
    Description: The name of the first database to be created when the redshift cluster
      is created
    Type: String
  RedshiftDatabasePort:
    Default: '5439'
    Description: 'The port that Redshift will listen on and that will be allowed through
      the Security Group. '
    Type: String
  RedshiftInboundCIDR:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})|<VPCCIDR>
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
    Default: <VPCCIDR>
    Description: Allow inbound traffic to the cluster from this CIDR range.  Set to
      '<VPCCIDR>' to use the CIDR of the created VPC.
    MaxLength: '18'
    MinLength: '9'
    Type: String
  RedshiftNodeType:
    AllowedValues:
      - ds2.xlarge
      - ds2.8xlarge
      - dc1.large
      - dc1.8xlarge
      - dc2.large
      - dc2.8xlarge
      - ra3.4xlarge 
      - ra3.16xlarge
    ConstraintDescription: must be a valid RedShift node type.
    Default: dc1.large
    Description: The node type to be provisioned for the redshift cluster
    Type: String
  RedshiftNumberOfNodes:
    Default: '2'
    Description: The number of compute nodes in the redshift cluster
    Type: Number
  RedshiftPassword:
    AllowedPattern: '[a-zA-Z0-9~`!#$%^&*()-_+={}|;:,.<>\[\]]*'
    ConstraintDescription: >-
      Between 8 and 64 chars in length; must contain at least one uppercase letter,
      one lowercase letter, and one number; can use any printable ASCII character
      (ASCII code 33 to 126) except ' (single quote), " (double quote), \, /, @, or
      space.
    Description: 'The password associated with the master user account for the redshift
      cluster that is being created. '
    MaxLength: '64'
    MinLength: '8'
    NoEcho: 'true'
    Type: String
  RedshiftUsername:
    AllowedPattern: ([a-z])([a-z]|[0-9])*
    ConstraintDescription: must start with a-z and contain only a-z or 0-9.
    Default: redshift
    Description: The user name associated with the master user account for the redshift
      cluster that is being created
    Type: String
  RegCity:
    Description: City
    Type: String
  RegCompany:
    Description: Company
    Type: String
  RegCountry:
    Description: Country
    Type: String
  RegDepartment:
    Description: Department
    Type: String
  RegEmail:
    Description: Email
    MinLength: '1'
    Type: String
  RegFirstName:
    Description: First Name
    MinLength: '1'
    Type: String
  RegIndustry:
    Description: Industry
    Type: String
  RegLastName:
    Description: Last Name
    MinLength: '1'
    Type: String
  RegPhone:
    Description: Phone
    Type: String
  RegState:
    Description: State
    Type: String
  RegTitle:
    Description: Title
    Type: String
  RegZip:
    Description: ZIP/Postal Code
    Type: String
  SqlWorkerInstanceType:
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
    Default: t2.micro
    Description: Amazon EC2 instance type for the SQL Worker instance
    Type: String
  TableauServerInboundCIDR:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})|<VPCCIDR>
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
    Default: <VPCCIDR>
    Description: CIDR from which you may connect to web interface or bastion host.  Set
      to '<VPCCIDR>' to use the CIDR of the created VPC.
    MaxLength: '18'
    MinLength: '9'
    Type: String
  TableauServerLicenseKey:
    Default: ''
    Description: License Key (leave blank for trial)
    Type: String
  VPCDefinition:
    Default: QuickstartDefault
    Description: >-
      VPC Definition name from Map maintained in this Quick Start's master template.  You
      can support multiple VPC Definitions by extending this Map and choosing the
      appropriate name.  If you do not need to change the VPC Definition, simply choose
      the default.
    Type: String
Conditions:
  NoRDGWInboundCIDRCondition: !Equals
    - !Ref 'RDGWInboundCIDR'
    - <VPCCIDR>
  NoRedshiftInboundCIDRCondition: !Equals
    - !Ref 'RedshiftInboundCIDR'
    - <VPCCIDR>
  NoRDSInboundCIDRCondition: !Equals
    - !Ref 'RDSInboundCIDR'
    - <VPCCIDR>
  NoTableauServerInboundCIDRCondition: !Equals
    - !Ref 'TableauServerInboundCIDR'
    - <VPCCIDR>
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
Mappings:
  VPCDefinitions:
    QuickstartDefault:
      CreateAdditionalPrivateSubnets: 'false'
      NATInstanceType: t2.small
      NumberOfAZs: '2'
      PrivateSubnet1ACIDR: 10.0.0.0/19
      PrivateSubnet1BCIDR: 10.0.192.0/21
      PrivateSubnet2ACIDR: 10.0.32.0/19
      PrivateSubnet2BCIDR: 10.0.200.0/21
      PrivateSubnet3ACIDR: 10.0.64.0/19
      PrivateSubnet3BCIDR: 10.0.208.0/21
      PrivateSubnet4ACIDR: 10.0.96.0/19
      PrivateSubnet4BCIDR: 10.0.216.0/21
      PublicSubnet1CIDR: 10.0.128.0/20
      PublicSubnet2CIDR: 10.0.144.0/20
      PublicSubnet3CIDR: 10.0.160.0/20
      PublicSubnet4CIDR: 10.0.176.0/20
      VPCCIDR: 10.0.0.0/16
Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        KeyPairName: !Ref 'KeyPairName'
        AvailabilityZones: !Join
          - ','
          - !Ref 'AvailabilityZones'
        NumberOfAZs: !FindInMap
          - VPCDefinitions
          - !Ref 'VPCDefinition'
          - NumberOfAZs
        PrivateSubnet1ACIDR: !FindInMap
          - VPCDefinitions
          - !Ref 'VPCDefinition'
          - PrivateSubnet1ACIDR
        PrivateSubnet2ACIDR: !FindInMap
          - VPCDefinitions
          - !Ref 'VPCDefinition'
          - PrivateSubnet2ACIDR
        PrivateSubnet3ACIDR: !FindInMap
          - VPCDefinitions
          - !Ref 'VPCDefinition'
          - PrivateSubnet3ACIDR
        PrivateSubnet4ACIDR: !FindInMap
          - VPCDefinitions
          - !Ref 'VPCDefinition'
          - PrivateSubnet4ACIDR
        PublicSubnet1CIDR: !FindInMap
          - VPCDefinitions
          - !Ref 'VPCDefinition'
          - PublicSubnet1CIDR
        PublicSubnet2CIDR: !FindInMap
          - VPCDefinitions
          - !Ref 'VPCDefinition'
          - PublicSubnet2CIDR
        PublicSubnet3CIDR: !FindInMap
          - VPCDefinitions
          - !Ref 'VPCDefinition'
          - PublicSubnet3CIDR
        PublicSubnet4CIDR: !FindInMap
          - VPCDefinitions
          - !Ref 'VPCDefinition'
          - PublicSubnet4CIDR
        CreateAdditionalPrivateSubnets: !FindInMap
          - VPCDefinitions
          - !Ref 'VPCDefinition'
          - CreateAdditionalPrivateSubnets
        PrivateSubnet1BCIDR: !FindInMap
          - VPCDefinitions
          - !Ref 'VPCDefinition'
          - PrivateSubnet1BCIDR
        PrivateSubnet2BCIDR: !FindInMap
          - VPCDefinitions
          - !Ref 'VPCDefinition'
          - PrivateSubnet2BCIDR
        PrivateSubnet3BCIDR: !FindInMap
          - VPCDefinitions
          - !Ref 'VPCDefinition'
          - PrivateSubnet3BCIDR
        PrivateSubnet4BCIDR: !FindInMap
          - VPCDefinitions
          - !Ref 'VPCDefinition'
          - PrivateSubnet4BCIDR
        NATInstanceType: !FindInMap
          - VPCDefinitions
          - !Ref 'VPCDefinition'
          - NATInstanceType
        VPCCIDR: !FindInMap
          - VPCDefinitions
          - !Ref 'VPCDefinition'
          - VPCCIDR
  LinuxBastionStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        BastionInstanceType: !Ref 'BastionInstanceType'
        BastionAMIOS: !Ref 'BastionAMIOS'
        BastionBanner: !Ref 'BastionBanner'
        EnableBanner: !Ref 'EnableBanner'
        KeyPairName: !Ref 'KeyPairName'
        PublicSubnet1ID: !GetAtt 
          - VPCStack
          - Outputs.PublicSubnet1ID
        PublicSubnet2ID: !GetAtt 
          - VPCStack
          - Outputs.PublicSubnet2ID
        QSS3BucketName: !Ref QSS3BucketName
        QSS3BucketRegion: !Ref QSS3BucketRegion
        QSS3KeyPrefix: !Sub ${QSS3KeyPrefix}submodules/quickstart-linux-bastion/
        RemoteAccessCIDR: !Ref 'BastionInboundCIDR'
        VPCID: !GetAtt 
          - VPCStack
          - Outputs.VPCID
        EnableTCPForwarding: 'true'
  RDGWStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
       - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-microsoft-rdgateway/templates/rdgw-standalone.template'
       - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
         S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        AdminPassword: !Ref 'RDGWAdminPassword'
        AdminUser: !Ref 'RDGWAdminUser'
        KeyPairName: !Ref 'KeyPairName'
        DomainDNSName: !Ref 'DomainDNSName'
        PublicSubnet1ID: !GetAtt 
          - VPCStack
          - Outputs.PublicSubnet1ID
        PublicSubnet2ID: !GetAtt 
          - VPCStack
          - Outputs.PublicSubnet2ID
        QSS3BucketName: !Ref QSS3BucketName
        QSS3BucketRegion: !Ref QSS3BucketRegion            
        QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}submodules/quickstart-microsoft-rdgateway/'
        RDGWInstanceType: !Ref 'RDGWInstanceType'
        RDGWCIDR: !If
          - NoRDGWInboundCIDRCondition
          - !GetAtt 'VPCStack.Outputs.VPCCIDR'
          - !Ref 'RDGWInboundCIDR'
        VPCID: !GetAtt 
          - VPCStack
          - Outputs.VPCID
  TableauAwsdataStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/tableau-awsdata.template'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        BastionEIP: !GetAtt 
          - LinuxBastionStack
          - Outputs.EIP1
        ContentAdminPassword: !Ref 'ContentAdminPassword'
        ContentAdminUser: !Ref 'ContentAdminUser'
        DatasetS3BucketName: !Ref 'DatasetS3BucketName'
        DatasetS3KeyPrefix: !Ref 'DatasetS3KeyPrefix'
        DatasetS3Region: !Ref 'DatasetS3Region'
        HostedZoneName: !Ref 'HostedZoneName'
        KeyPairName: !Ref 'KeyPairName'
        LoadDataset: !Ref 'LoadDataset'
        PrivateSubnet1ID: !GetAtt 
          - VPCStack
          - Outputs.PrivateSubnet1AID
        PrivateSubnet2ID: !GetAtt 
          - VPCStack
          - Outputs.PrivateSubnet2AID
        PublicSubnet1ID: !GetAtt 
          - VPCStack
          - Outputs.PublicSubnet1ID
        PublicSubnet2ID: !GetAtt 
          - VPCStack
          - Outputs.PublicSubnet2ID
        QSS3BucketName: !Ref 'QSS3BucketName'
        QSS3BucketRegion: !Ref QSS3BucketRegion
        QSS3KeyPrefix: !Ref 'QSS3KeyPrefix'
        RDGWElasticIP: !GetAtt 
          - RDGWStack
          - Outputs.EIP1
        RDSAllocatedStorage: !Ref 'RDSAllocatedStorage'
        RDSDatabaseName: !Ref 'RDSDatabaseName'
        RDSDatabasePort: !Ref 'RDSDatabasePort'
        RDSInboundCIDR: !If
          - NoRDSInboundCIDRCondition
          - !GetAtt 'VPCStack.Outputs.VPCCIDR'
          - !Ref 'RDSInboundCIDR'
        RDSInstanceClass: !Ref 'RDSInstanceClass'
        RDSInstanceIdentifier: !Ref 'RDSInstanceIdentifier'
        RDSMultiAZ: !Ref 'RDSMultiAZ'
        RDSPassword: !Ref 'RDSPassword'
        RDSUsername: !Ref 'RDSUsername'
        RedshiftDatabaseName: !Ref 'RedshiftDatabaseName'
        RedshiftDatabasePort: !Ref 'RedshiftDatabasePort'
        RedshiftInboundCIDR: !If
          - NoRedshiftInboundCIDRCondition
          - !GetAtt 'VPCStack.Outputs.VPCCIDR'
          - !Ref 'RedshiftInboundCIDR'
        RedshiftNodeType: !Ref 'RedshiftNodeType'
        RedshiftNumberOfNodes: !Ref 'RedshiftNumberOfNodes'
        RedshiftPassword: !Ref 'RedshiftPassword'
        RedshiftUsername: !Ref 'RedshiftUsername'
        RegCity: !Ref 'RegCity'
        RegCompany: !Ref 'RegCompany'
        RegCountry: !Ref 'RegCountry'
        RegDepartment: !Ref 'RegDepartment'
        RegEmail: !Ref 'RegEmail'
        RegFirstName: !Ref 'RegFirstName'
        RegIndustry: !Ref 'RegIndustry'
        RegLastName: !Ref 'RegLastName'
        RegPhone: !Ref 'RegPhone'
        RegState: !Ref 'RegState'
        RegTitle: !Ref 'RegTitle'
        RegZip: !Ref 'RegZip'
        RootStackName: !Ref 'AWS::StackName'
        SqlWorkerInstanceType: !Ref 'SqlWorkerInstanceType'
        TableauServerInboundCIDR: !If
          - NoTableauServerInboundCIDRCondition
          - !GetAtt 'VPCStack.Outputs.VPCCIDR'
          - !Ref 'TableauServerInboundCIDR'
        TableauServerLicenseKey: !Ref 'TableauServerLicenseKey'
        VPCCIDR: !GetAtt 
          - VPCStack
          - Outputs.VPCCIDR
        VPCID: !GetAtt 
          - VPCStack
          - Outputs.VPCID
Outputs:
  TableauServerURL:
    Description: URL through which Tableau Server can be accessed.
    Value: !GetAtt 
      - TableauAwsdataStack
      - Outputs.TableauServerURL
  BastionPublicName:
    Description: Convenient Name for Bastion Public Access
    Value: !GetAtt 
      - TableauAwsdataStack
      - Outputs.BastionPublicName
  RDGWPublicName:
    Description: Convenient Name for RDGW Public Access
    Value: !GetAtt 
      - TableauAwsdataStack
      - Outputs.RDGWPublicName
  TableauServerPublicName:
    Description: Convenient Name for TableauServer Public Access
    Value: !GetAtt 
    - TableauAwsdataStack
    - Outputs.TableauServerPublicName
  TableauServerPrivateName:
    Description: Convenient Name for TableauServer Private Access
    Value: !GetAtt 
    - TableauAwsdataStack
    - Outputs.TableauServerPrivateName
  SqlWorkerPrivateName:
    Description: Convenient Name for SqlWorker Private Access
    Value: !GetAtt 
    - TableauAwsdataStack
    - Outputs.SqlWorkerPrivateName
  RedshiftPrivateName:
    Description: Convenient Name for Redshift Private Access
    Value: !GetAtt 
    - TableauAwsdataStack
    - Outputs.RedshiftPrivateName
  RDSPrivateName:
    Description: Convenient Name for Postgres RDS Private Access
    Value: !GetAtt 
    - TableauAwsdataStack
    - Outputs.RDSPrivateName
